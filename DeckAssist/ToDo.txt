[TODO]  reduce reused code in layout definitions
[TODO]  initialize local variables of functions correctly (Gnereal refactoring)

[TODO]  handle errors properly

[TODO]  
[TODO]	REDO card flip logic to be less messy

[TODO]	make deck input box instruction text hint text
[TODO]	change orientation of card preview when viewing split cards
[TODO]  remove references to Card.Parent deck and find alternate solutions
[TODO]  check if card is legal deck member (e.g. not a token)
[TODO]  meld preview section
[TODO]  assign commander and assess deck legality for various formats
[TODO]  further deck building functionalities
[TODO]	  keyword search
[TODO]	  text search
[TODO]	  creature type search
[TODO]    alternate printings
[TODO]	  deck price challenge
[TODO]	  

[DONE]create repository, 1st working revision, Import card lists, view deck, flip cards and read only flipped attributes, working mana curve
[DONE]refactor data classes such as deck and card to remove dependencies and remove viewmodel functionality, transfer control of those actions to viewmodel if necessary
[DONE]when flipping card from front side, create new entry below, and when flipping from bottom, create new entry above, and/or add if entry already made
[DONE]make flip highlight border functional
[DONE]reduce redundancy in Card

Exceptions
use try/catch on code that can generate exceptions AND app can recover from
catch in order of most derived to least derived
don't catch non-recoverable exceptions

actions that can be expected to occur regularly should not be thrown but rather avoided via logic